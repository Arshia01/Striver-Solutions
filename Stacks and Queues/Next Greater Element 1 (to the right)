class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        
        vector<int> ans;
        int a = nums1.size();
        int b = nums2.size();
        stack<int> s;
        map<int, int> m;
        
        
        for(int i=b-1; i>=0; i--){
        
            if(s.size()==0){
                m.insert({nums2[i], -1});
            }
            
            else if (nums2[i]<s.top()){
                m.insert({nums2[i], s.top()});
            }
            
            else{
            
                //keep poping until you find a greater element
                while(s.size()>0 && nums2[i]>=s.top() ){
                    s.pop();
                }
                
                //if the stack size becomes 0 => no greater element than nums[i] on its right
                if(s.size()==0)
                    m.insert({nums2[i], -1});
                else
                    m.insert({nums2[i], s.top()});
            }
            
            s.push(nums2[i]);
        }
        
        //searching in the map and inserting in vector
        for(int i=0; i<a; i++)
        {
            ans.push_back(m[nums1[i]]);
        }
        
        
        return ans;
        
    }
};
