Better Approach (Using hash maps)

class Solution {
public:
    int majorityElement(vector<int>& nums) {
        
        unordered_map <int, int> mp;
        int ans;
        
        for(int i=0; i<nums.size(); i++){
            mp[nums[i]]++;
        }
        for(auto it = mp.begin(); it!=mp.end(); it++){
            if(it->second > (nums.size()/2)){
                ans = it->first;
            }
        }
        return ans;
    }
};

Best Approach (Moore's Voting Algorithm)
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int count=0, el=0;
        
        for(int i=0; i<nums.size(); i++){
            if(count == 0){
                el = nums[i];
            }
            if(el == nums[i]){
                count++;
            }
            else{
                count--;
            }
        }
        return el;
    }
};
