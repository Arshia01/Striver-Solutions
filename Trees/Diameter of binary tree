//while calculating the height, keep track of diameter
//instead of calculating the diameter for each node (O(N^2)) do this, where your actual calulation of diameter is is the leftmost node in the tree

class Solution {
public:
    
    int height(TreeNode* root, int& d){
    
        if(root==NULL)
            return 0;
        
        int lh = height(root->left, d);
        int rh = height(root->right, d);
        
        d = max(d, lh+rh);
        
        return (1 + max(lh, rh));
    }
    
    int diameterOfBinaryTree(TreeNode* root) {
        
        int d=0;
        if(root==NULL)
            return 0;
        height(root, d);
        
        return d;
    }
};
